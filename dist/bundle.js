(()=>{"use strict";var n={254:(n,e,t)=>{t.d(e,{Z:()=>i});var o=t(537),r=t.n(o),a=t(645),c=t.n(a)()(r());c.push([n.id,"#header {\n    width: 100%;\n    height: auto;\n    padding: 0.2em;\n    background-color: var(--first-color);\n    font-size: 2rem;\n    font-weight: bold;\n    color: var(--second-color);\n}","",{version:3,sources:["webpack://./src/header.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,YAAY;IACZ,cAAc;IACd,oCAAoC;IACpC,eAAe;IACf,iBAAiB;IACjB,0BAA0B;AAC9B",sourcesContent:["#header {\n    width: 100%;\n    height: auto;\n    padding: 0.2em;\n    background-color: var(--first-color);\n    font-size: 2rem;\n    font-weight: bold;\n    color: var(--second-color);\n}"],sourceRoot:""}]);const i=c},424:(n,e,t)=>{t.d(e,{Z:()=>i});var o=t(537),r=t.n(o),a=t(645),c=t.n(a)()(r());c.push([n.id,":root {\n    --first-color: #cbb5dc;\n    --second-color: #1a3443;\n    --third-color: #aebf97;\n    --fourth-color: #fcdac6;\n}\n\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    background-color: #d2d1d1;\n}","",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,uBAAuB;IACvB,sBAAsB;IACtB,uBAAuB;AAC3B;;AAEA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;IACtB,yBAAyB;AAC7B",sourcesContent:[":root {\n    --first-color: #cbb5dc;\n    --second-color: #1a3443;\n    --third-color: #aebf97;\n    --fourth-color: #fcdac6;\n}\n\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    background-color: #d2d1d1;\n}"],sourceRoot:""}]);const i=c},694:(n,e,t)=>{t.d(e,{Z:()=>i});var o=t(537),r=t.n(o),a=t(645),c=t.n(a)()(r());c.push([n.id,"#projectButton {\n    margin: 0 auto;\n    margin-top: 1em;\n    padding: 15px;\n    width: fit-content;\n    height: auto;\n    font-size: 3rem;\n    font-weight: bold;\n    background-color: var(--third-color);\n    color: var(--second-color);\n    text-align: center;\n    cursor: pointer;\n  }\n  \n  #container {\n    margin-top: 2em;\n    display: flex;\n  }\n  \n  #projectPane {\n    height: 100vh;\n    margin-left: 1em;\n    margin-bottom: 1em;\n    padding: 2em;\n    color: var(--second-color);\n    font-size: 1.8rem;\n    font-weight: bold;\n    display: flex;\n    flex-direction: column;\n    gap: 1em;\n  }\n  \n  .projects {\n    width: 25vw;\n    font-size: 2rem;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    cursor: pointer;\n  }\n  \n  .delete {\n    width: 1em;\n    height: auto;\n  }\n  \n  .taskPanes {\n    background-color: var(--fourth-color);\n    height: 100vh;\n    width: 75vw;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  #taskButton {\n    padding: 0.8em;\n    margin: 0.5em;\n    font-size: 2.6rem;\n    font-weight: bold;\n    color: var(--second-color);\n    background-color: var(--third-color);\n    cursor: pointer;\n  }\n  \n  .taskContainers {\n    padding: 0.5em;\n    width: 100vw;\n    display: flex;\n    flex-direction: column;\n\n  }\n\n  .upperTaskPane {\n    display: flex;\n    justify-content: space-between;\n    background-color: var(--first-color);\n  }","",{version:3,sources:["webpack://./src/main-page.css"],names:[],mappings:"AAAA;IACI,cAAc;IACd,eAAe;IACf,aAAa;IACb,kBAAkB;IAClB,YAAY;IACZ,eAAe;IACf,iBAAiB;IACjB,oCAAoC;IACpC,0BAA0B;IAC1B,kBAAkB;IAClB,eAAe;EACjB;;EAEA;IACE,eAAe;IACf,aAAa;EACf;;EAEA;IACE,aAAa;IACb,gBAAgB;IAChB,kBAAkB;IAClB,YAAY;IACZ,0BAA0B;IAC1B,iBAAiB;IACjB,iBAAiB;IACjB,aAAa;IACb,sBAAsB;IACtB,QAAQ;EACV;;EAEA;IACE,WAAW;IACX,eAAe;IACf,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,eAAe;EACjB;;EAEA;IACE,UAAU;IACV,YAAY;EACd;;EAEA;IACE,qCAAqC;IACrC,aAAa;IACb,WAAW;IACX,aAAa;IACb,sBAAsB;IACtB,mBAAmB;EACrB;;EAEA;IACE,cAAc;IACd,aAAa;IACb,iBAAiB;IACjB,iBAAiB;IACjB,0BAA0B;IAC1B,oCAAoC;IACpC,eAAe;EACjB;;EAEA;IACE,cAAc;IACd,YAAY;IACZ,aAAa;IACb,sBAAsB;;EAExB;;EAEA;IACE,aAAa;IACb,8BAA8B;IAC9B,oCAAoC;EACtC",sourcesContent:["#projectButton {\n    margin: 0 auto;\n    margin-top: 1em;\n    padding: 15px;\n    width: fit-content;\n    height: auto;\n    font-size: 3rem;\n    font-weight: bold;\n    background-color: var(--third-color);\n    color: var(--second-color);\n    text-align: center;\n    cursor: pointer;\n  }\n  \n  #container {\n    margin-top: 2em;\n    display: flex;\n  }\n  \n  #projectPane {\n    height: 100vh;\n    margin-left: 1em;\n    margin-bottom: 1em;\n    padding: 2em;\n    color: var(--second-color);\n    font-size: 1.8rem;\n    font-weight: bold;\n    display: flex;\n    flex-direction: column;\n    gap: 1em;\n  }\n  \n  .projects {\n    width: 25vw;\n    font-size: 2rem;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    cursor: pointer;\n  }\n  \n  .delete {\n    width: 1em;\n    height: auto;\n  }\n  \n  .taskPanes {\n    background-color: var(--fourth-color);\n    height: 100vh;\n    width: 75vw;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  #taskButton {\n    padding: 0.8em;\n    margin: 0.5em;\n    font-size: 2.6rem;\n    font-weight: bold;\n    color: var(--second-color);\n    background-color: var(--third-color);\n    cursor: pointer;\n  }\n  \n  .taskContainers {\n    padding: 0.5em;\n    width: 100vw;\n    display: flex;\n    flex-direction: column;\n\n  }\n\n  .upperTaskPane {\n    display: flex;\n    justify-content: space-between;\n    background-color: var(--first-color);\n  }"],sourceRoot:""}]);const i=c},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var c={};if(o)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(c[s]=!0)}for(var d=0;d<n.length;d++){var A=[].concat(n[d]);o&&c[A[0]]||(void 0!==a&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=a),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),r&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=r):A[4]="".concat(r)),e.push(A))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */"),c=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(c).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},c=[],i=0;i<n.length;i++){var s=n[i],d=o.base?s[0]+o.base:s[0],A=a[d]||0,l="".concat(d," ").concat(A);a[d]=A+1;var u=t(l),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var m=r(p,o);o.byIndex=i,e.splice(i,0,{identifier:l,updater:m,references:1})}c.push(l)}return c}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var c=0;c<a.length;c++){var i=t(a[c]);e[i].references--}for(var s=o(n,r),d=0;d<a.length;d++){var A=t(a[d]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}a=s}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),a=t(569),c=t.n(a),i=t(565),s=t.n(i),d=t(216),A=t.n(d),l=t(589),u=t.n(l),p=t(424),m={};m.styleTagTransform=u(),m.setAttributes=s(),m.insert=c().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=A(),e()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;var f=t(254),C={};C.styleTagTransform=u(),C.setAttributes=s(),C.insert=c().bind(null,"head"),C.domAPI=r(),C.insertStyleElement=A(),e()(f.Z,C),f.Z&&f.Z.locals&&f.Z.locals;const v=document.createElement("div");v.setAttribute("id","header"),v.textContent="Noob's To Do List";var h=t(694),g={};g.styleTagTransform=u(),g.setAttributes=s(),g.insert=c().bind(null,"head"),g.domAPI=r(),g.insertStyleElement=A(),e()(h.Z,g),h.Z&&h.Z.locals&&h.Z.locals;const B=document.createElement("div");B.setAttribute("id","container");const b=document.createElement("div");b.setAttribute("id","projectPane");const I=document.createElement("div");I.setAttribute("id","taskPane"),B.append(b,I);const E=document.createElement("div");E.setAttribute("class","projects"),b.append(E);const x=document.createElement("div");x.setAttribute("id","projectButton"),x.textContent="+ New Project";let y=[];const k=()=>{b.innerHTML="",y.forEach((n=>{const e=document.createElement("div");e.setAttribute("class","projects"),e.append(n.name,n.delBtn),b.append(e)}))},w=function(){let n=-1;return function(){return n++,n}}();function j(){I.textContent=""}function T(){const n=document.createElement("div");n.setAttribute("class","taskContainers");const e=document.createElement("div");e.setAttribute("class","upperTaskPane");const t=document.createElement("div");t.textContent="task";const o=document.createElement("div"),r=document.createElement("div");e.append(t,o),n.append(e,r),I.append(n)}x.addEventListener("click",(()=>{let n=prompt("Set new project name:");const e=document.createElement("img");e.setAttribute("class","delete"),e.dataset.indexNo=w(),e.src="../components/multiplication.svg";const t=((n,e,t,o,r)=>({indexNo:n,name:e,tasks:null,delBtn:o,selected:!1}))(e.dataset.indexNo,n,0,e);null!==n&&(""!==n?(y.push(t),y.forEach((n=>{n.selected=!1})),k(),j()):alert("The project name can not be empty."))})),B.addEventListener("click",(function(n){"delete"===n.target.className&&function(n){y=y.filter((e=>e.indexNo!==n.target.dataset.indexNo)),k(),j()}(n)})),B.addEventListener("click",(function(n){"projects"===n.target.className&&function(n){var e;e=n,document.querySelectorAll(".projects").forEach((n=>{n.style.fontSize="2rem"})),e.target.style.fontSize="3rem",function(n){y.length>1?(y.find((e=>e.indexNo===n.target.lastChild.dataset.indexNo)).selected=!0,y.find((e=>e.indexNo!==n.target.lastChild.dataset.indexNo)).selected=!1):y.find((e=>e.indexNo===n.target.lastChild.dataset.indexNo)).selected=!0}(n),function(){const n=document.createElement("div");n.setAttribute("class","taskPanes"),I.append(n);const e=document.createElement("div");e.setAttribute("id","taskButton"),e.textContent="+ Add New Task",n.append(e)}()}(n)})),B.addEventListener("click",(function(n){"taskButton"===n.target.id&&function(){const n=prompt("Set new task");null!==n&&(""!==n?null===y.find((n=>!0===n.selected)).tasks?(y.find((n=>!0===n.selected)).tasks=`${n},`,T()):(y.find((n=>!0===n.selected)).tasks+=`${n},`,T()):alert("The task name can not be empty."))}()})),document.querySelector("#content").append(v,x,B)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,